{"title":"SQL查漏补缺","uid":"0a779d0e741d0e316d7b9d9aa44bdfc9","slug":"SQL 查漏补缺","date":"2023-10-15T22:44:08.000Z","updated":"2023-11-09T06:14:21.122Z","comments":true,"path":"api/articles/SQL 查漏补缺.json","keywords":"Kangwei Zhu's Blog","cover":null,"content":"<h1 id=\"SQL查漏补缺\"><a href=\"#SQL查漏补缺\" class=\"headerlink\" title=\"SQL查漏补缺\"></a>SQL查漏补缺</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>记录一下SQL刷题时候遇到的知识点漏洞</p></blockquote>\n<h2 id=\"1-SQL-和-的适用场景\"><a href=\"#1-SQL-和-的适用场景\" class=\"headerlink\" title=\"1. SQL !&#x3D; 和 &#x3D;&#x3D; 的适用场景\"></a>1. SQL !&#x3D; 和 &#x3D;&#x3D; 的适用场景</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>– SQL 中，!&#x3D; 和 &#x3D;&#x3D; 只能用于数字判断，对于空值， 需要用 is， is not 来判断</p></blockquote>\n<ul>\n<li><a href=\"https://leetcode.com/problems/find-customer-referee/\">584. Find Customer Referee</a></li>\n</ul>\n<h2 id=\"2-计算日期差值\"><a href=\"#2-计算日期差值\" class=\"headerlink\" title=\"2. 计算日期差值\"></a>2. 计算日期差值</h2><p><code>datediff(date1, date2)</code> </p>\n<p>结果为date1 - date2</p>\n<ul>\n<li><a href=\"https://leetcode.com/problems/rising-temperature/\">197. Rising Temperature</a></li>\n</ul>\n<h2 id=\"3-left-right-join必须要on条件，而inner-join不需要\"><a href=\"#3-left-right-join必须要on条件，而inner-join不需要\" class=\"headerlink\" title=\"3. left&#x2F;right join必须要on条件，而inner join不需要\"></a>3. left&#x2F;right join必须要on条件，而inner join不需要</h2><h2 id=\"4-where-having-join-on区别\"><a href=\"#4-where-having-join-on区别\" class=\"headerlink\" title=\"4. where&#x2F;having&#x2F;join on区别\"></a>4. where&#x2F;having&#x2F;join on区别</h2><p>先看一下SQL的执行流程：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>第一步：from 选择表</p>\n<p>第二步：where 筛选条件，筛选对象–行</p>\n<p>第三步：group by 将筛选出来的数据进行分组</p>\n<p>第四步：having 筛选条件，筛选对象–组</p>\n<p>第五步：select 选取最后的结果</p>\n<p>第六步：order by 将结果按照特定顺序排列</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>“where” 是一个约束声明，使用Where来约束来之数据库的数据，Where是在<strong>结果返回之前</strong>起作用的，且Where中<strong>不能使用</strong>聚合函数。</p>\n<p>“Having”是一个过滤声明，是在查询返回<strong>结果集</strong>以后对查询结果进行的<strong>过滤操作</strong>，在Having中<strong>可以使用</strong>聚合函数。</p></blockquote>\n<ul>\n<li><p>Having里面<strong>不能用列名</strong>，只能用数值和聚合函数的对比。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在 SQL 查询中，当你使用 <code>GROUP BY</code> 语句对结果进行分组时，除了被聚合的列（使用聚合函数如 <code>MIN</code>、<code>MAX</code>、<code>AVG</code>、<code>SUM</code> 等）之外，其他列的值将不明确。这些未被聚合的列通常需要通过聚合函数或者放入 <code>GROUP BY</code> 子句中，以明确它们在每个分组内的值。</p>\n<p>所以，当你在 <code>HAVING</code> 子句中使用 <code>order_date</code> 而不是聚合函数，就是指 <code>order_date</code> 是未被聚合的列。<code>HAVING</code> 子句用于过滤基于聚合的结果，而未被聚合的列在这个语境下不是直接可用的。</p></blockquote>\n<p>举例来说：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #908CAA; font-style: italic\">--</span><span style=\"color: #6E6A86; font-style: italic\"> 有效的查询，因为 COUNT 是一个聚合函数</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">SELECT</span><span style=\"color: #E0DEF4\"> customer_id</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">FROM</span><span style=\"color: #E0DEF4\"> Delivery</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">GROUP BY</span><span style=\"color: #E0DEF4\"> customer_id</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">HAVING</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EB6F92; font-style: italic\">COUNT</span><span style=\"color: #E0DEF4\">(</span><span style=\"color: #3E8FB0\">*</span><span style=\"color: #E0DEF4\">) </span><span style=\"color: #3E8FB0\">&gt;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">1</span><span style=\"color: #E0DEF4\">;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #908CAA; font-style: italic\">--</span><span style=\"color: #6E6A86; font-style: italic\"> 无效的查询，因为 order_date 是未被聚合的列</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">SELECT</span><span style=\"color: #E0DEF4\"> customer_id, order_date</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">FROM</span><span style=\"color: #E0DEF4\"> Delivery</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">GROUP BY</span><span style=\"color: #E0DEF4\"> customer_id</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">HAVING</span><span style=\"color: #E0DEF4\"> order_date </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EB6F92; font-style: italic\">MIN</span><span style=\"color: #E0DEF4\">(order_date);</span></span></code></pre></div><p>在第二个查询中，<code>order_date</code> 是未被聚合的列，而 <code>HAVING</code> 子句中的条件要求使用 <code>MIN(order_date)</code>，这就是为什么会报错的原因。解决方法通常是通过子查询或者连接操作来获取你需要的结果。</p>\n</li>\n</ul>\n<h3 id=\"Mysql报错：group-function-is-not-allowed-here\"><a href=\"#Mysql报错：group-function-is-not-allowed-here\" class=\"headerlink\" title=\"Mysql报错：group function is not allowed here\"></a>Mysql报错：group function is not allowed here</h3><p>在where和on中，我们<strong>不能使用聚合函数</strong>。因为on和where都是针对<strong>行</strong>的筛选。而聚合函数，很明显是对于<strong>整张表上的数据的统计</strong>。</p>\n<p>所以，当你将聚合函数的判定放在where和on中，会报错。因为你没办法对一个行进行统计。</p>\n<p>聚合函数的判定，放having里。因为having是用来对<strong>结果集</strong>进行筛选的</p>\n<ul>\n<li><a href=\"https://leetcode.com/problems/managers-with-at-least-5-direct-reports/\">570. Managers with at Least 5 Direct Reports</a></li>\n</ul>\n<h2 id=\"5-Mysql中if的用法\"><a href=\"#5-Mysql中if的用法\" class=\"headerlink\" title=\"5. Mysql中if的用法\"></a>5. Mysql中if的用法</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>常用sum内嵌套if</p>\n<p>sum(if (aaa &#x3D; ‘xxx’, 1, 0))</p></blockquote>\n<h3 id=\"算平均值时，除数是0，结果为null。但是需要把null改成0。怎么改？\"><a href=\"#算平均值时，除数是0，结果为null。但是需要把null改成0。怎么改？\" class=\"headerlink\" title=\"算平均值时，除数是0，结果为null。但是需要把null改成0。怎么改？\"></a>算平均值时，除数是0，结果为null。但是需要把null改成0。怎么改？</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用nullif</p></blockquote>\n<p>nullif(1&#x2F;0,0)</p>\n<ul>\n<li><a href=\"https://leetcode.com/problems/confirmation-rate/\">1934. Confirmation Rate</a></li>\n</ul>\n<h2 id=\"6-统计字符串长度\"><a href=\"#6-统计字符串长度\" class=\"headerlink\" title=\"6. 统计字符串长度\"></a>6. 统计字符串长度</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>char_length</code>或者<code>len</code></p></blockquote>\n<ul>\n<li><a href=\"https://leetcode.com/problems/invalid-tweets/\">1683. Invalid Tweets</a></li>\n</ul>\n<h2 id=\"7-SQL判断字段奇偶\"><a href=\"#7-SQL判断字段奇偶\" class=\"headerlink\" title=\"7. SQL判断字段奇偶\"></a>7. SQL判断字段奇偶</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>mod(字段, 2) &#x3D; 1  或&#x3D;0   </p></blockquote>\n<ul>\n<li><a href=\"https://leetcode.com/problems/not-boring-movies/\">620. Not Boring Movies</a></li>\n</ul>\n<h2 id=\"8-SQL-判断日期是否在区间内\"><a href=\"#8-SQL-判断日期是否在区间内\" class=\"headerlink\" title=\"8. SQL 判断日期是否在区间内\"></a>8. SQL 判断日期是否在区间内</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> 两种办法</p>\n<ol>\n<li>用BETWEEN AND</li>\n</ol>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">SELECT</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">*</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">FROM</span><span style=\"color: #E0DEF4\"> table_name</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">WHERE</span><span style=\"color: #E0DEF4\"> date_column_name </span><span style=\"color: #3E8FB0\">BETWEEN</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">start_date</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">AND</span><span style=\"color: #E0DEF4\"> end_date;</span></span></code></pre></div><ol start=\"2\">\n<li>用大于小于</li>\n</ol>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">SELECT</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">*</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">FROM</span><span style=\"color: #E0DEF4\"> table_name</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">WHERE</span><span style=\"color: #E0DEF4\"> date_column_name </span><span style=\"color: #3E8FB0\">&gt;=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">start_date</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">AND</span><span style=\"color: #E0DEF4\"> date_column_name </span><span style=\"color: #3E8FB0\">&lt;=</span><span style=\"color: #E0DEF4\"> end_date;</span></span></code></pre></div></blockquote>\n<ul>\n<li><a href=\"https://leetcode.com/problems/average-selling-price/\">1251. Average Selling Price</a></li>\n</ul>\n<h2 id=\"9-Mysql中的sum\"><a href=\"#9-Mysql中的sum\" class=\"headerlink\" title=\"9. Mysql中的sum\"></a>9. Mysql中的sum</h2><blockquote>\n<p>通常配合groupby使用，在sum中，只要是对单行操作，都可以。比如可以是sum(同一行的价格 * 数量) , 就能求总价</p></blockquote>\n<h2 id=\"10-Mysql日期的截断\"><a href=\"#10-Mysql日期的截断\" class=\"headerlink\" title=\"10. Mysql日期的截断\"></a>10. Mysql日期的截断</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>正常datetime都是yy-mm-dd 这种格式构成的，如果我们只要yy-mm这一部分，怎么做呢。</p></blockquote>\n<p>使用 DATE_FORMAT(get_date, ‘%Y-%m-%d’) 函数截取。</p>\n<p>其中：get_date 是需要截取的字段名；’%Y-%m-%d’ 是截取后的日期格式。</p>\n<p>select date_format(‘1997-10-04 22:23:00’,’%y %M %b %D %W %a %Y-%m-%d %H:%i:%s %r %T’);</p>\n<p>结果：97 October Oct 4th Saturday Sat 1997-10-04 22:23:00 10:23:00 PM 22:23:00</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #908CAA; font-style: italic\">--</span><span style=\"color: #6E6A86; font-style: italic\"> get_date = &quot;2006-12-07&quot;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">SELECT</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EB6F92; font-style: italic\">count</span><span style=\"color: #E0DEF4\">(</span><span style=\"color: #3E8FB0\">*</span><span style=\"color: #E0DEF4\">) </span><span style=\"color: #3E8FB0\">FROM</span><span style=\"color: #E0DEF4\"> t_get_video_temp </span><span style=\"color: #3E8FB0\">Where</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">DATE_FORMAT</span><span style=\"color: #E0DEF4\">(get_date, </span><span style=\"color: #F6C177\">&#39;%Y-%m-%d&#39;</span><span style=\"color: #E0DEF4\">)</span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #F6C177\">&#39;2006-12-07&#39;</span><span style=\"color: #E0DEF4\">; </span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">SELECT</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EB6F92; font-style: italic\">count</span><span style=\"color: #E0DEF4\">(</span><span style=\"color: #3E8FB0\">*</span><span style=\"color: #E0DEF4\">) </span><span style=\"color: #3E8FB0\">FROM</span><span style=\"color: #E0DEF4\"> t_get_video_temp </span><span style=\"color: #3E8FB0\">Where</span><span style=\"color: #E0DEF4\"> get_date </span><span style=\"color: #3E8FB0\">like</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #F6C177\">&#39;2006%-07%&#39;</span><span style=\"color: #E0DEF4\">;</span></span></code></pre></div><ul>\n<li><a href=\"https://leetcode.com/problems/monthly-transactions-i/\">1193. Monthly Transactions I</a></li>\n</ul>\n<h2 id=\"11-Mysql中日期大小\"><a href=\"#11-Mysql中日期大小\" class=\"headerlink\" title=\"11. Mysql中日期大小\"></a>11. Mysql中日期大小</h2><p>可以用min()取到最小日期</p>\n<h2 id=\"12-where-字段-in-查询\"><a href=\"#12-where-字段-in-查询\" class=\"headerlink\" title=\"12. where (字段) in (查询)\"></a>12. where (字段) in (查询)</h2><p><a href=\"https://leetcode.com/problems/immediate-food-delivery-ii/\">1174. Immediate Food Delivery II</a></p>\n<p>对一张表的<strong>重复操作</strong>有奇效。先筛一次数据，然后对筛选结果进行汇总。</p>\n<h3 id=\"13-日期要用引号包裹。\"><a href=\"#13-日期要用引号包裹。\" class=\"headerlink\" title=\"13. 日期要用引号包裹。\"></a>13. 日期要用引号包裹。</h3><h3 id=\"14-Round函数的使用\"><a href=\"#14-Round函数的使用\" class=\"headerlink\" title=\"14. Round函数的使用\"></a>14. Round函数的使用</h3><p>round(值, 0) &#x3D;&gt; 整数</p>\n<p>round(值, 1) &#x3D;&gt; 一位小数</p>\n<p>round(值, 2) &#x3D;&gt; 两位小数</p>\n<h3 id=\"15-Union的使用\"><a href=\"#15-Union的使用\" class=\"headerlink\" title=\"15. Union的使用\"></a>15. Union的使用</h3><p>Union主要用于合并两个结果集. 简而言之就是在原先行的情况下往下追加行</p>\n","text":"SQL查漏补缺 记录一下SQL刷题时候遇到的知识点漏洞 1. SQL !&#x3D; 和 &#x3D;&#x3D; 的适用场景 – SQL 中，!&#x3D; ...","permalink":"/post/SQL 查漏补缺","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SQL%E6%9F%A5%E6%BC%8F%E8%A1%A5%E7%BC%BA\"><span class=\"toc-text\">SQL查漏补缺</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-SQL-%E5%92%8C-%E7%9A%84%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">1. SQL !&#x3D; 和 &#x3D;&#x3D; 的适用场景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E8%AE%A1%E7%AE%97%E6%97%A5%E6%9C%9F%E5%B7%AE%E5%80%BC\"><span class=\"toc-text\">2. 计算日期差值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-left-right-join%E5%BF%85%E9%A1%BB%E8%A6%81on%E6%9D%A1%E4%BB%B6%EF%BC%8C%E8%80%8Cinner-join%E4%B8%8D%E9%9C%80%E8%A6%81\"><span class=\"toc-text\">3. left&#x2F;right join必须要on条件，而inner join不需要</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-where-having-join-on%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">4. where&#x2F;having&#x2F;join on区别</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Mysql%E6%8A%A5%E9%94%99%EF%BC%9Agroup-function-is-not-allowed-here\"><span class=\"toc-text\">Mysql报错：group function is not allowed here</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-Mysql%E4%B8%ADif%E7%9A%84%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">5. Mysql中if的用法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E5%B9%B3%E5%9D%87%E5%80%BC%E6%97%B6%EF%BC%8C%E9%99%A4%E6%95%B0%E6%98%AF0%EF%BC%8C%E7%BB%93%E6%9E%9C%E4%B8%BAnull%E3%80%82%E4%BD%86%E6%98%AF%E9%9C%80%E8%A6%81%E6%8A%8Anull%E6%94%B9%E6%88%900%E3%80%82%E6%80%8E%E4%B9%88%E6%94%B9%EF%BC%9F\"><span class=\"toc-text\">算平均值时，除数是0，结果为null。但是需要把null改成0。怎么改？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E7%BB%9F%E8%AE%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%95%BF%E5%BA%A6\"><span class=\"toc-text\">6. 统计字符串长度</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-SQL%E5%88%A4%E6%96%AD%E5%AD%97%E6%AE%B5%E5%A5%87%E5%81%B6\"><span class=\"toc-text\">7. SQL判断字段奇偶</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-SQL-%E5%88%A4%E6%96%AD%E6%97%A5%E6%9C%9F%E6%98%AF%E5%90%A6%E5%9C%A8%E5%8C%BA%E9%97%B4%E5%86%85\"><span class=\"toc-text\">8. SQL 判断日期是否在区间内</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-Mysql%E4%B8%AD%E7%9A%84sum\"><span class=\"toc-text\">9. Mysql中的sum</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#10-Mysql%E6%97%A5%E6%9C%9F%E7%9A%84%E6%88%AA%E6%96%AD\"><span class=\"toc-text\">10. Mysql日期的截断</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-Mysql%E4%B8%AD%E6%97%A5%E6%9C%9F%E5%A4%A7%E5%B0%8F\"><span class=\"toc-text\">11. Mysql中日期大小</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#12-where-%E5%AD%97%E6%AE%B5-in-%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">12. where (字段) in (查询)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#13-%E6%97%A5%E6%9C%9F%E8%A6%81%E7%94%A8%E5%BC%95%E5%8F%B7%E5%8C%85%E8%A3%B9%E3%80%82\"><span class=\"toc-text\">13. 日期要用引号包裹。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#14-Round%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">14. Round函数的使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#15-Union%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">15. Union的使用</span></a></li></ol></li></ol></li></ol>","author":{"name":"Kangwei Zhu","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/93107633?v=4","link":"/","description":"偏我来时不逢春，偏我去时春满城","socials":{"github":"https://github.com/KangweiZhu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode-svgrepo-com.svg","link":"https://leetcode.com/anicaaovo/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Operting System Design -- CS416 Midterm 篇","uid":"32d2a70489e715ae35bf956ab6dd892e","slug":"OSD","date":"2023-10-29T05:11:23.000Z","updated":"2023-11-08T23:11:26.282Z","comments":true,"path":"api/articles/OSD.json","keywords":"Kangwei Zhu's Blog","cover":[],"text":"1. 为什么要学习OSD？ OS forms the foundation of modern computing Abstractions: Modern S...","permalink":"/post/OSD","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[],"tags":[],"author":{"name":"Kangwei Zhu","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/93107633?v=4","link":"/","description":"偏我来时不逢春，偏我去时春满城","socials":{"github":"https://github.com/KangweiZhu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode-svgrepo-com.svg","link":"https://leetcode.com/anicaaovo/"}}}}},"next_post":{"title":"函数式编程","uid":"78bf35c97e41da6a2bdad05b63951aa3","slug":"Lambda表达式","date":"2023-10-12T06:23:00.000Z","updated":"2023-11-08T23:11:26.282Z","comments":true,"path":"api/articles/Lambda表达式.json","keywords":"Kangwei Zhu's Blog","cover":null,"text":"1.概述Lambda是JDK8中的一个语法糖。可以对匿名内部类的写法进行简化。是函数式编程思想的体现。类型可以推导-&gt;省略类型方法可以推导-&gt;省略方...","permalink":"/post/Lambda表达式","photos":[],"count_time":{"symbolsCount":510,"symbolsTime":"1 mins."},"categories":[{"name":"Java基础","slug":"Java基础","count":3,"path":"api/categories/Java基础.json"}],"tags":[{"name":"Java基础","slug":"Java基础","count":1,"path":"api/tags/Java基础.json"},{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"},{"name":"Lambda表达式","slug":"Lambda表达式","count":1,"path":"api/tags/Lambda表达式.json"}],"author":{"name":"Kangwei Zhu","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/93107633?v=4","link":"/","description":"偏我来时不逢春，偏我去时春满城","socials":{"github":"https://github.com/KangweiZhu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode-svgrepo-com.svg","link":"https://leetcode.com/anicaaovo/"}}}}}}